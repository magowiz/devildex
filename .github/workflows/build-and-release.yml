name: Build and Release All Artifacts

on:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write
  pull-requests: write

jobs:
  build-linux-wheel:
    if: false # << RIPRISTINATO COME RICHIESTO
    name: Build Linux Wheel
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      # ... resto degli step ...
      - name: Build wheel
        run: poetry build --format wheel
      - name: Upload Linux Wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: devildex-linux-wheel-artifact
          path: dist/*.whl

  build-macos-wheel:
    if: false # << RIPRISTINATO COME RICHIESTO
    name: Build macOS Wheel
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # ... resto degli step ...
      - name: Build Wheel
        run: poetry build --format wheel
      - name: Upload Wheel Artifact
        uses: actions/upload-artifact@v4
        with:
          name: devildex-macos-wheel-artifact
          path: dist/*.whl

  build-windows-wheel:
    # Questo job rimane attivo
    name: Build Windows Wheel
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # ... resto degli step ...
      - name: Build Wheel
        run: poetry build --format wheel
      - name: Upload Wheel Artifact
        uses: actions/upload-artifact@v4
        with:
          name: devildex-windows-wheel-artifact
          path: dist/*.whl

  build-deb-package:
    if: false # << RIPRISTINATO COME RICHIESTO
    name: Build Debian Package
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # ... resto degli step ...
      - name: Build Debian package
        run: |
          cp -r packaging/debian .
          dpkg-buildpackage -us -uc
          mkdir -p dist/deb
          mv ../*.deb dist/deb/
      - name: Upload Debian Package artifact
        uses: actions/upload-artifact@v4
        with:
          name: devildex-debian-package
          path: dist/deb/*.deb

  build-package:
    # Questo job rimane attivo
    name: Build Pyinstaller Pkg
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      # ... resto degli step ...
      - name: Build Package
        run: |
          if [ "${{ runner.os }}" == "macOS" ]; then
            pyinstaller --log-level=DEBUG packaging/pyinstaller/specs/devildex_macos.spec --distpath dist/${{ matrix.os }}
          elif [ "${{ runner.os }}" == "Windows" ]; then
            pyinstaller --log-level=DEBUG packaging/pyinstaller/specs/devildex_windows.spec --distpath dist/${{ matrix.os }}
          elif [ "${{ runner.os }}" == "Linux" ]; then
            pyinstaller --log-level=DEBUG packaging/pyinstaller/specs/devildex_linux.spec --distpath dist/${{ matrix.os }}
          fi
      - name: Upload Bundle Artifact
        uses: actions/upload-artifact@v4
        with:
          name: devildex-${{ runner.os }}-bundle
          path: dist/${{ matrix.os }}/

  build-docs:
    if: false # << RIPRISTINATO COME RICHIESTO
    name: Build Documentation
    runs-on: ubuntu-