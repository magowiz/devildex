# .github/workflows/build-wheel.yml
name: Build Python Wheel

on:
  workflow_run:
    workflows: ["Python Tests"]
    types: [completed]

permissions:
  contents: write

jobs:
  build:
    name: Build Wheel
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    # Use Ubuntu 24.04 to match the Jenkins environment and ensure wxPython wheel compatibility.
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Poetry and Export Plugin
        run: |
          pip install poetry
          poetry self add poetry-plugin-export

      - name: Install system dependencies for wxPython
        # These are required for wxPython, which is a build dependency.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libxtst-dev libnotify-dev \
          python3-gi \
          python3-gi-cairo \
          python3-wxgtk4.0 \
          python3-wxgtk-webview4.0

      - name: Install dependencies with pip
        env:
          # Use the exact find-links URL from Jenkinsfile to get pre-compiled wxPython wheels
          # and avoid a lengthy compilation. This requires the ubuntu-24.04 runner.
          PIP_FIND_LINKS: "https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-24.04/"
        run: |
          # Export dependencies from poetry.lock to use pip for installation.
          # This is more reliable for wxPython than `poetry install`.
          poetry export -f requirements.txt --output requirements.txt --without-hashes
          pip install -r requirements.txt

      - name: Build wheel
        run: poetry build --format wheel

      - name: Publish to GitHub Releases
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/') # Only run if triggered by a tag push
        with:
          files: dist/*.whl # Upload all .whl files from the dist directory
          token: ${{ secrets.GITHUB_TOKEN }} # GitHub token for authentication
