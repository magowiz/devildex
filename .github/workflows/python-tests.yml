name: Python Tests

on:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write # Required to create releases and upload assets
  pull-requests: write # Good practice to include, though not strictly needed for this simple flow

jobs:
  test:
    name: Python Tests
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Poetry and Export Plugin
        run: |
          pip install poetry
          poetry self add poetry-plugin-export

      - name: Generate poetry.lock
        run: poetry lock

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libnotify-dev \
            libgtk-3-dev \
            libsdl2-dev \
            libwebkit2gtk-4.1-dev \
            libxtst-dev \
            xvfb \
            bzr \
            python3-gi \
            python3-gi-cairo \
            python3-wxgtk4.0 \
            python3-wxgtk-webview4.0

      - name: Install dependencies and project
        env:
          PIP_FIND_LINKS: "https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-24.04/"
        run: |
          poetry export --with test -f requirements.txt --output requirements.txt --without-hashes
          pip install -r requirements.txt
          pip install --no-deps -e .

      - name: Setup Bazaar and Launchpad credentials
        env:
          LAUNCHPAD_CONFIG_FILE_CONTENT: ${{ secrets.LAUNCHPAD_ID_CONF_FILE }}
        run: |
          mkdir -p ~/.bazaar/
          echo "${{ secrets.LAUNCHPAD_ID_CONF_FILE }}" > ~/.bazaar/launchpad.conf
          echo "Launchpad config file created."

      - name: Run tests with Xvfb
        continue-on-error: true
        run: |
          xvfb-run pytest --verbose \
            --cov=src \
            --cov-report=xml \
            --cov-report=html:coverage_report \
            --html=test_report/index.html \
            --junitxml=test-results.xml || true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./
          fail_ci_if_error: true

      - name: Upload Test Report (HTML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report-html
          path: test_report/

      - name: Upload Coverage Report (HTML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-html
          path: coverage_report/

      - name: Upload Screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-screenshots
          path: screenshots/
          if-no-files-found: ignore

      - name: Upload Coverage Report (XML for SonarQube)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
          if-no-files-found: ignore

      - name: Upload Test Results (XML for SonarQube)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-xml
          path: test-results.xml
          if-no-files-found: ignore
