name: Release Workflow

on:
  push:
    tags:
      - 'v*.*.*' # Trigger on tags like v1.0.0, v0.2.0, etc.

permissions:
  contents: write # Required to create releases and upload assets
  pull-requests: write # Good practice to include, though not strictly needed for this simple flow

jobs:
  build-linux-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Poetry and Export Plugin
        run: |
          pip install poetry
          poetry self add poetry-plugin-export

      - name: Install system dependencies for wxPython
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libxtst-dev libnotify-dev \
          python3-gi \
          python3-gi-cairo \
          python3-wxgtk4.0 \
          python3-wxgtk-webview4.0

      - name: Install dependencies with pip
        env:
          PIP_FIND_LINKS: "https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-24.04/"
        run: |
          poetry lock
          poetry export -f requirements.txt --output requirements.txt --without-hashes
          pip install -r requirements.txt

      - name: Build Linux Wheel
        run: poetry build --format wheel

      - name: Build Linux PyInstaller bundle
        run: |
          poetry run pyinstaller pyinstaller_specs/devildex_linux.spec --distpath dist/linux
          cd dist/linux
          zip -r devildex-linux-bundle-${{ github.ref_name }}.zip devildex
          mv devildex-linux-bundle-${{ github.ref_name }}.zip ..
          cd ../..

      - name: Upload Linux Wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: devildex-linux-wheel
          path: dist/*.whl

      - name: Upload Linux Bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: devildex-linux-bundle
          path: dist/devildex-linux-bundle-${{ github.ref_name }}.zip

  build-macos-artifacts:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Poetry
        run: pip install poetry

      - name: Build macOS Wheel
        run: poetry build --format wheel

      - name: Build macOS PyInstaller bundle
        run: |
          poetry run pyinstaller pyinstaller_specs/devildex_macos.spec --distpath dist/macos
          cd dist/macos
          zip -r devildex-macos-bundle-${{ github.ref_name }}.zip devildex
          mv devildex-macos-bundle-${{ github.ref_name }}.zip ..
          cd ../..

      - name: Upload macOS Wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: devildex-macos-wheel
          path: dist/*.whl

      - name: Upload macOS Bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: devildex-macos-bundle
          path: dist/devildex-macos-bundle-${{ github.ref_name }}.zip

  build-windows-artifacts:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Poetry
        run: pip install poetry

      - name: Build Windows Wheel
        run: poetry build --format wheel

      - name: Build Windows PyInstaller bundle
        run: |
          poetry run pyinstaller pyinstaller_specs/devildex_windows.spec --distpath dist/windows
          cd dist/windows
          zip -r devildex-windows-bundle-${{ github.ref_name }}.zip devildex.exe
          mv devildex-windows-bundle-${{ github.ref_name }}.zip ..
          cd ../..

      - name: Upload Windows Wheel artifact
        uses: actions/upload-artifact@v4
        with:
          name: devildex-windows-wheel
          path: dist/*.whl

      - name: Upload Windows Bundle artifact
        uses: actions/upload-artifact@v4
        with:
          name: devildex-windows-bundle
          path: dist/devildex-windows-bundle-${{ github.ref_name }}.zip

  build-documentation:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Poetry and Export Plugin
        run: |
          pip install poetry
          poetry self add poetry-plugin-export

      - name: Install system dependencies for wxPython
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libxtst-dev libnotify-dev \
          python3-gi \
          python3-gi-cairo \
          python3-wxgtk4.0 \
          python3-wxgtk-webview4.0

      - name: Install dependencies with pip
        env:
          PIP_FIND_LINKS: "https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-24.04/"
        run: |
          poetry lock
          poetry export -f requirements.txt --output requirements.txt --without-hashes
          pip install -r requirements.txt

      - name: Build Documentation
        run: |
          chmod +x generate_sphinx_doc.sh
          ./generate_sphinx_doc.sh

      - name: Zip documentation
        run: |
          cd build/html
          zip -r devildex_documentation.zip ./*
          mv devildex_documentation.zip ../../dist/
          cd ../..

      - name: Upload Documentation artifact
        uses: actions/upload-artifact@v4
        with:
          name: devildex-documentation
          path: ./dist/devildex_documentation.zip

  create-and-upload-release:
    runs-on: ubuntu-latest
    needs: [build-linux-artifacts, build-macos-artifacts, build-windows-artifacts, build-documentation]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Linux Wheel
        uses: actions/download-artifact@v4
        with:
          name: devildex-linux-wheel
          path: dist/linux-wheel

      - name: Download Linux Bundle
        uses: actions/download-artifact@v4
        with:
          name: devildex-linux-bundle
          path: dist/linux-bundle

      - name: Download macOS Wheel
        uses: actions/download-artifact@v4
        with:
          name: devildex-macos-wheel
          path: dist/macos-wheel

      - name: Download macOS Bundle
        uses: actions/download-artifact@v4
        with:
          name: devildex-macos-bundle
          path: dist/macos-bundle

      - name: Download Windows Wheel
        uses: actions/download-artifact@v4
        with:
          name: devildex-windows-wheel
          path: dist/windows-wheel

      - name: Download Windows Bundle
        uses: actions/download-artifact@v4
        with:
          name: devildex-windows-bundle
          path: dist/windows-bundle

      - name: Download Documentation
        uses: actions/download-artifact@v4
        with:
          name: devildex-documentation
          path: dist/documentation

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: "Release ${{ github.ref }}"
          draft: false
          prerelease: false

      - name: Upload Linux Wheel asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/linux-wheel/*.whl
          asset_name: devildex-linux-wheel-${{ github.ref_name }}.whl
          asset_content_type: application/zip

      - name: Upload Linux Bundle asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/linux-bundle/*.zip
          asset_name: devildex-linux-bundle-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload macOS Wheel asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/macos-wheel/*.whl
          asset_name: devildex-macos-wheel-${{ github.ref_name }}.whl
          asset_content_type: application/zip

      - name: Upload macOS Bundle asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/macos-bundle/*.zip
          asset_name: devildex-macos-bundle-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload Windows Wheel asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/windows-wheel/*.whl
          asset_name: devildex-windows-wheel-${{ github.ref_name }}.whl
          asset_content_type: application/zip

      - name: Upload Windows Bundle asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/windows-bundle/*.zip
          asset_name: devildex-windows-bundle-${{ github.ref_name }}.zip
          asset_content_type: application/zip

      - name: Upload Documentation asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/documentation/*.zip
          asset_name: devildex-documentation-${{ github.ref_name }}.zip
          asset_content_type: application/zip
