name: Test Packaged Application

on:
  workflow_run:
    workflows: ["Build and Release All Artifacts"]
    types:
      - completed

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      test_packages: ${{ steps.get_vars.outputs.test_packages }}
    steps:
      - id: get_vars
        run: echo "test_packages='${{ vars.TEST_PACKAGES || '[\"all\"]' }}'" >> $GITHUB_OUTPUT

  test-windows-pyinstaller-bundle:
    needs: setup
    name: Test Windows PyInstaller Bundle
    runs-on: windows-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && (contains(fromJSON(needs.setup.outputs.test_packages), 'all') || contains(fromJSON(needs.setup.outputs.test_packages), 'windows-bundle')) }}
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: devildex-windows-bundle
          path: build/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}

      - name: List downloaded files (Windows)
        run: ls -R build/

      - name: Test Built Application (Windows)
        run: |
         $process = Start-Process -FilePath ".\\build\\devildex_windows.exe" -NoNewWindow -PassThru
         Start-Sleep -Seconds 30
         if ($process.HasExited) {
             Write-Error "Application exited prematurely."
             exit 1
         } else {
             Stop-Process -Id $process.Id -ErrorAction SilentlyContinue
             Write-Host "Application remained running for 30 seconds."
         }

  test-macos-pyinstaller-bundle:
    needs: setup
    name: Test macOS PyInstaller Bundle
    runs-on: macos-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && (contains(fromJSON(needs.setup.outputs.test_packages), 'all') || contains(fromJSON(needs.setup.outputs.test_packages), 'macos-bundle')) }}
    steps:
      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: devildex-macos-bundle
          path: build/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}

      - name: List downloaded files (macOS)
        run: ls -R build/

      - name: Test Built Application (macOS)
        run: |
         chmod +x ./build/devildex_macos
         ./build/devildex_macos &
         PID=$!
         sleep 30
         if ps -p $PID > /dev/null; then
             kill $PID
             echo "Application remained running for 30 seconds."
         else
             echo "Application exited prematurely."
             exit 1
         fi

  test-linux-debian-package:
    needs: setup
    name: Test Linux Debian Package
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && (contains(fromJSON(needs.setup.outputs.test_packages), 'all') || contains(fromJSON(needs.setup.outputs.test_packages), 'debian-package')) }}
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: devildex-debian-package
          path: build/deb/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: List downloaded files (Linux)
        run: ls -R build/

      - name: Test Built Application (Linux)
        run: |
         dpkg -c build/deb/*.deb
         sudo apt-get update
         sudo apt-get install -y xvfb ./build/deb/*.deb
         echo "APT-GET install exit code: $?"
         ls -l /usr/bin/devildex || true # Use || true to prevent the step from failing if devildex is not found yet
         
         # Find the devildex executable
         DEVIDEX_PATH=$(find /usr/bin /usr/local/bin /opt -name devildex -type f -executable | head -n 1)
         
         if [ -z "$DEVIDEX_PATH" ]; then
           echo "Error: devildex executable not found after Debian package installation."
           exit 1
         fi
         
         echo "Found devildex executable at: $DEVIDEX_PATH"
         
         xvfb-run "$DEVIDEX_PATH" &
         PID=$!
         sleep 30
         if ps -p $PID > /dev/null; then
             kill $PID
             echo "Application remained running for 30 seconds."
         else
             echo "Application exited prematurely."
             exit 1
         fi

  test-linux-wheel-package:
    needs: setup
    name: Test Linux Wheel Package
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && (contains(fromJSON(needs.setup.outputs.test_packages), 'all') || contains(fromJSON(needs.setup.outputs.test_packages), 'linux-wheel')) }}
    steps:
      - name: Download Linux Wheel artifact
        uses: actions/download-artifact@v4
        with:
          name: devildex-linux-wheel-artifact
          path: build/wheel/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: List downloaded files (Linux Wheel)
        run: ls -R build/wheel/

      - name: Install libnotify
        run: sudo apt-get update && sudo apt-get install -y libnotify4 libsdl2-2.0-0 libgirepository1.0-dev gobject-introspection gir1.2-gtk-3.0 gir1.2-webkit2-4.1 python3-gi python3-gi-cairo python3-wxgtk4.0 python3-wxgtk-webview4.0

      - name: Test Installed Wheel (Linux)
        run: |
         pip list
         ls -lR build/wheel
         pip install ./build/wheel/devildex-*.whl alembic
         pip install "wxpython @ https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-24.04/wxPython-4.2.2-cp313-cp313-linux_x86_64.whl"
         xvfb-run devildex &
         PID=$!
         sleep 30
         if ps -p $PID > /dev/null; then
             kill $PID
             echo "Application remained running for 30 seconds."
         else
             echo "Application exited prematurely."
             exit 1
         fi


  test-macos-wheel-package:
    needs: setup
    name: Test macOS Wheel Package
    runs-on: macos-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && (contains(fromJSON(needs.setup.outputs.test_packages), 'all') || contains(fromJSON(needs.setup.outputs.test_packages), 'macos-wheel')) }}
    steps:
      - name: Download macOS Wheel artifact
        uses: actions/download-artifact@v4
        with:
          name: devildex-macos-wheel-artifact
          path: build/wheel/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: List downloaded files (macOS Wheel)
        run: ls -R build/wheel/

      - name: Test Installed Wheel (macOS)
        run: |
         pip list
         ls -lR build/wheel
         pip install ./build/wheel/devildex-*.whl alembic
         pip install wxpython==4.2.3
         devildex &
         PID=$!
         sleep 30
         if ps -p $PID > /dev/null; then
             kill $PID
             echo "Application remained running for 30 seconds."
         else
             echo "Application exited prematurely."
             exit 1
         fi

  test-windows-wheel-package:
    needs: setup
    name: Test Windows Wheel Package
    runs-on: windows-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && (contains(fromJSON(needs.setup.outputs.test_packages), 'all') || contains(fromJSON(needs.setup.outputs.test_packages), 'windows-wheel')) }}
    steps:
      - name: Download Windows Wheel artifact
        uses: actions/download-artifact@v4
        with:
          name: devildex-windows-wheel-artifact
          path: build/wheel/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: List downloaded files (Windows Wheel)
        run: ls -R build/wheel/

      - name: Test Installed Wheel (Windows)
        run: |
         $wheelFile = Get-ChildItem -Path ./build/wheel/devildex-*.whl | Select-Object -First 1
         pip install $wheelFile.FullName alembic
         pip install wxpython==4.2.3
         $process = Start-Process -FilePath "${{ env.pythonLocation }}\Scripts\devildex.exe" -NoNewWindow -PassThru
         Start-Sleep -Seconds 30
         if ($process.HasExited) {
             Write-Error "Application exited prematurely."
             exit 1
         } else {
             Stop-Process -Id $process.Id -ErrorAction SilentlyContinue
             Write-Host "Application remained running for 30 seconds."
         }

  test-linux-pyinstaller-bundle:
    needs: setup
    name: Test Linux PyInstaller Bundle
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && (contains(fromJSON(needs.setup.outputs.test_packages), 'all') || contains(fromJSON(needs.setup.outputs.test_packages), 'linux-bundle')) }}
    steps:
      - name: Download PyInstaller Linux bundle
        uses: actions/download-artifact@v4
        with:
          name: devildex-linux-bundle
          path: build/ubuntu-latest/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
      - name: List downloaded files (PyInstaller Linux)
        run: ls -R build/ubuntu-latest/

      - name: Test Built Application (PyInstaller Linux)
        run: |
         sudo apt-get update
         sudo apt-get install -y xvfb libnotify4 libsdl2-2.0-0 libwebkit2gtk-4.1-0
         chmod +x ./build/ubuntu-latest/devildex_linux
         xvfb-run ./build/ubuntu-latest/devildex_linux &
         PID=$!
         sleep 30
         if ps -p $PID > /dev/null; then
             kill $PID
             echo "Application remained running for 30 seconds."
         else
             echo "Application exited prematurely."
             exit 1
         fi

  test-rpm-package:
    needs: setup
    name: Test RPM Package
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' && (contains(fromJSON(needs.setup.outputs.test_packages), 'all') || contains(fromJSON(needs.setup.outputs.test_packages), 'rpm-package')) }}
    container:
      image: fedora:latest
    steps:
      - name: Download RPM package
        uses: actions/download-artifact@v4
        with:
          name: devildex-rpm-package
          path: build/rpm/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
      - name: List downloaded files (RPM)
        run: ls -R build/rpm/

      - name: Test Built Application (RPM)
        run: |
          sudo dnf install -y xorg-x11-server-Xvfb procps-ng
          sudo dnf install -y python3-pip
          sudo dnf install -y ./build/rpm/*.rpm
          # All Python dependencies are now handled by RPM Requires or the %post scriptlet.
          PYTHONPATH=/usr/local/lib/python3.13/site-packages xvfb-run devildex &
          PID=$!
          sleep 30
          if ps -p $PID > /dev/null; then
              kill $PID
              echo "Application remained running for 30 seconds."
          else
              echo "Application exited prematurely."
              exit 1
          fi