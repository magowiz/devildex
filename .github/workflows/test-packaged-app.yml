name: Test Packaged Application

on:
  workflow_run:
    workflows: ["Build and Test All Artifacts"]
    types:
      - completed

jobs:
  test-windows-pyinstaller-bundle:
    name: Test Windows PyInstaller Bundle
    runs-on: windows-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: devildex-windows-bundle
          path: build/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}

      - name: List downloaded files (Windows)
        run: ls -R build/

      - name: Test Built Application (Windows)
        run: |
          $process = Start-Process -FilePath ".\build\devildex_windows.exe" -NoNewWindow -PassThru
          Start-Sleep -Seconds 30
          if ($process.HasExited) {
              Write-Error "Application exited prematurely."
              exit 1
          } else {
              Stop-Process -Id $process.Id -ErrorAction SilentlyContinue
              Write-Host "Application remained running for 30 seconds."
          }

  test-macos-pyinstaller-bundle:
    if: false
    name: Test macOS PyInstaller Bundle
    runs-on: macos-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: devildex-macos-bundle
          path: build/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}

      - name: List downloaded files (macOS)
        run: ls -R build/

      - name: Test Built Application (macOS)
        run: |
          chmod +x ./build/devildex_macos
          ./build/devildex_macos &
          PID=$!
          sleep 30
          if ps -p $PID > /dev/null; then
              kill $PID
              echo "Application remained running for 30 seconds."
          else
              echo "Application exited prematurely."
              exit 1
          fi

  test-linux-debian-package:
    if: false
    name: Test Linux Debian Package
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: devildex-debian-package
          path: build/deb/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}

      - name: List downloaded files (Linux)
        run: ls -R build/

      - name: Test Built Application (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb ./build/deb/*.deb
          echo "APT-GET install exit code: $?"
          ls -l /usr/bin/devildex || true # Use || true to prevent the step from failing if devildex is not found yet
          
          # Find the devildex executable
          DEVIDEX_PATH=$(find /usr/bin /usr/local/bin /opt -name devildex -type f -executable | head -n 1)
          
          if [ -z "$DEVIDEX_PATH" ]; then
            echo "Error: devildex executable not found after Debian package installation."
            exit 1
          fi
          
          echo "Found devildex executable at: $DEVIDEX_PATH"
          
          xvfb-run "$DEVIDEX_PATH" &
          PID=$!
          sleep 30
          if ps -p $PID > /dev/null; then
              kill $PID
              echo "Application remained running for 30 seconds."
          else
              echo "Application exited prematurely."
              exit 1
          fi

  test-linux-wheel-package:
    if: false
    name: Test Linux Wheel Package
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download Linux Wheel artifact
        uses: actions/download-artifact@v4
        with:
          name: devildex-linux-wheel-artifact
          path: build/wheel/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: List downloaded files (Linux Wheel)
        run: ls -R build/wheel/

      - name: Test Installed Wheel (Linux)
        run: |
          pip install ./build/wheel/devildex-*.whl alembic
          pip install "wxpython @ https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-24.04/wxPython-4.2.2-cp313-cp313-linux_x86_64.whl"
          python -c "import devildex; import subprocess; p = subprocess.Popen(['devildex']); import time; time.sleep(30); p.poll() or p.terminate(); exit(0) if p.returncode is None else exit(1)"

  test-windows-pyinstaller-bundle-pyinstaller-job:
    if: false
    name: Test Windows PyInstaller Bundle (PyInstaller Job)
    runs-on: windows-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download PyInstaller Windows bundle
        uses: actions/download-artifact@v4
        with:
          name: devildex-windows-bundle
          path: build/windows-latest/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
      - name: List downloaded files (PyInstaller Windows)
        run: ls -R build/windows-latest/

      - name: Test Built Application (PyInstaller Windows)
        run: |
          $process = Start-Process -FilePath ".\build\windows-latest\devildex_windows.exe" -NoNewWindow -PassThru
          Start-Sleep -Seconds 30
          if ($process.HasExited) {
              Write-Error "Application exited prematurely."
              exit 1
          } else {
              Stop-Process -Id $process.Id -ErrorAction SilentlyContinue
              Write-Host "Application remained running for 30 seconds."
          }

  test-macos-pyinstaller-bundle-pyinstaller-job:
    if: false
    name: Test macOS PyInstaller Bundle (PyInstaller Job)
    runs-on: macos-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download PyInstaller macOS bundle
        uses: actions/download-artifact@v4
        with:
          name: devildex-macos-bundle
          path: build/macos-latest/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
      - name: List downloaded files (PyInstaller macOS)
        run: ls -R build/macos-latest/

      - name: Test Built Application (PyInstaller macOS)
        run: |
          chmod +x ./build/macos-latest/devildex_macos
          ./build/macos-latest/devildex_macos &
          PID=$!
          sleep 30
          if ps -p $PID > /dev/null; then
              kill $PID
              echo "Application remained running for 30 seconds."
          else
              echo "Application exited prematurely."
              exit 1
          fi

  test-linux-pyinstaller-bundle:
    if: false
    name: Test Linux PyInstaller Bundle
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download PyInstaller Linux bundle
        uses: actions/download-artifact@v4
        with:
          name: devildex-linux-bundle
          path: build/ubuntu-latest/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
      - name: List downloaded files (PyInstaller Linux)
        run: ls -R build/ubuntu-latest/

      - name: Test Built Application (PyInstaller Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          chmod +x ./build/ubuntu-latest/devildex_linux
          xvfb-run ./build/ubuntu-latest/devildex_linux &
          PID=$!
          sleep 30
          if ps -p $PID > /dev/null; then
              kill $PID
              echo "Application remained running for 30 seconds."
          else
              echo "Application exited prematurely."
              exit 1
          fi

  test-rpm-package:
    if: false
    name: Test RPM Package
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download RPM package
        uses: actions/download-artifact@v4
        with:
          name: devildex-rpm-package
          path: build/rpm/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
      - name: List downloaded files (RPM)
        run: ls -R build/rpm/

      - name: Test Built Application (RPM)
        run: |
          sudo dnf install -y xorg-x11-server-Xvfb
          
          # Install Python dependencies using pip
          pip3 install toml pip-requirements-parser pdoc3 requests platformdirs poetry-core sqlalchemy pyyaml pydoctor fastapi uvicorn markdownify pyinstaller alembic
          
          # Install wxpython separately as it's a direct URL dependency
          pip3 install "wxpython @ https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-24.04/wxPython-4.2.2-cp313-cp313-linux_x86_64.whl"
          
          sudo dnf install -y ./build/rpm/*.rpm
          xvfb-run devildex &
          PID=$!
          sleep 30
          if ps -p $PID > /dev/null; then
              kill $PID
              echo "Application remained running for 30 seconds."
          else
              echo "Application exited prematurely."
              exit 1
          fi
