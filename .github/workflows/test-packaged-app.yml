name: Test Packaged Application

on:
  workflow_run:
    workflows: ["Build and Test All Artifacts"]
    types:
      - completed

jobs:
  test-windows-package:
    runs-on: windows-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: devildex-windows-bundle
          path: build/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}

      - name: List downloaded files (Windows)
        run: ls -R build/

      - name: Test Built Application (Windows)
        run: |
          Start-Process -FilePath ".\build\devildex_windows.exe" -NoNewWindow -PassThru | Wait-Process -Timeout 20
          Stop-Process -Name "devildex_windows.exe" -ErrorAction SilentlyContinue

  test-macos-package:
    runs-on: macos-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: devildex-macos-bundle
          path: build/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}

      - name: List downloaded files (macOS)
        run: ls -R build/

      - name: Test Built Application (macOS)
        run: |
          chmod +x ./build/devildex_macos
          ./build/devildex_macos &
          sleep 20
          kill %1

  test-linux-package:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: devildex-debian-package
          path: build/deb/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}

      - name: List downloaded files (Linux)
        run: ls -R build/

      - name: Test Built Application (Linux)
        run: |
          sudo apt-get update
          sudo apt-get install -y ./build/deb/*.deb
          export PATH="/usr/bin:$PATH"
          devildex &
          sleep 20
          kill %1

  test-pyinstaller-windows-package:
    runs-on: windows-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download PyInstaller Windows bundle
        uses: actions/download-artifact@v4
        with:
          name: devildex-windows-bundle
          path: build/windows-latest/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
      - name: List downloaded files (PyInstaller Windows)
        run: ls -R build/windows-latest/

  test-pyinstaller-macos-package:
    runs-on: macos-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download PyInstaller macOS bundle
        uses: actions/download-artifact@v4
        with:
          name: devildex-macos-bundle
          path: build/macos-latest/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
      - name: List downloaded files (PyInstaller macOS)
        run: ls -R build/macos-latest/

  test-rpm-package:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Download RPM package
        uses: actions/download-artifact@v4
        with:
          name: devildex-rpm-package
          path: build/rpm/
          run-id: ${{ github.event.workflow_run.id }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
      - name: List downloaded files (RPM)
        run: ls -R build/rpm/
